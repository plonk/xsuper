* XSuper

透過ウィンドウを実現する際に、選択肢として非定型ウィンドウと、α値指定
の二種類がある。

α値の指定はデスクトップ・コンポジションが有効になっていないと動かない。

普段使っている awesome とか、デスクトップ・コンポジションの機能を有し
ていないウィンドウ・マネージャーと組み合わせても使えるためには、非定型
ウィンドウで実装する必要がある。


* デスクトップ・コンポジション



* ウィンドウの状態など

** ウィンドウマネージャーへのヒント

freedesktopで定義されている Extended Window Manager Hints という規格で
いろいろウィンドウのタイプが設定できる。

https://specifications.freedesktop.org/wm-spec/wm-spec-latest.html

ICCC? を拡張している。

ウィンドウの飾りを消す場合、Motifで定義されていたプロパティを使うのが
定石だったらしい。

EWMH(物理的な「飾りがー」とか言うんじゃなくて論理的な分類がされている)
で定義されている通知ウィンドウのタイプにしてみたが、飾りは消えなかった。
(xfce4)
オーバーライド・リダイレクトも指定しないといけない。

** オーバーライド・リダイレクト

メニュー・ウィンドウを出すときに WM に場所を動かされたくないとか、タイ
トルバーなどの飾りが要らない場合に指定するフラグ。

ウィンドウマネージャーの制御を受け付けなくなるので、移動やリサイズもで
きない。

* 黒い

オーバーライド・リダイレクトを指定しないと、非定型ウィンドウ

* ウィンドウ装飾

* 遅い

1. ひとつの原因はフォントセットを描画ごとに生成・解放していたからだった。

* 文字の描画

文字の縁取りをするために、描画要求を20~30回送っている。

解決方法として、

1. バックバッファーを使う。
2. バッキングストアを使う。

   これで十分用は成す。欠点としてはメモリを使う。特にデスクトップ合成
   時に無駄。でも問題にならない。

3. 文字の描画以外の方法で縁取りを実現する。

が考えられる。

** 別の縁取りアルゴリズムのアイデア

1. ウィンドウと、シェイプマスク用に1度ずつだけ文字を描画する。
2. シェイプマスクに、dilate アルゴリズムを適用して、文字を太くす
   る。

こうすれば文字は前景色、縁取りは背景色で表われる。

問題として、シェイプマスクに使われる二値Pixmapの配列データにアクセスす
ることが難しそうだということ。

Pixmap に文字を描画して、Image にコピーして、アルゴリズムを適用して、
Pixmap に コピーしないといけないから、これはこれで重そう。サーバーとク
ライアントでビットマップがピンポンする。

あーというか、実際の描画で縁取りをする必要はないのか。マスクを作るとき
だけ縁取りすればいいので。→十分高速になった。

↑整理するのがめんどくさい。

* ウィンドウの大きさや行の折り返しの挙動

** ウィンドウのリサイズ

override-redirect にせず、いくらか WM による制御を認めたところで、ウィ
ンドウにボーダーがなく形も矩形ではないので、効率的な操作は期待できない。

結果、移動やリサイズの機能を複製する必要がある。

** そもそも行の折り返し機能要る？

そこで、行の折り返し機能をなくせば、プログラムがすべきことはテキストが
収まるだけの大きさにウィンドウを広げることだけなので、リサイズの必要が
生じない。

現実には、テキストの編集機能が無い状態では、使いにくいから選択肢として
は無いだろう。

(テキストの編集機能は、ツールキットが無いと自分で実装しなきゃいけなく
て、それは大変すぎるからない。)

(袋小路だー。)
